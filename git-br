#!/bin/bash

set -e

sort_by_modified_date=false
is_force=false

for arg in $@
do
  if [ $arg = "-f" ]; then
    is_force=true
  fi
  if [ $arg = "-s" ]; then
    sort_by_modified_date=true
  fi
done


if $sort_by_modified_date; then
  branch="$(
  git for-each-ref --sort='-authordate:iso8601' --format=' %(authordate:iso8601)%09%(refname)' refs/heads \
    | grep -v '*' \
    | awk '{print $4}' \
    | sed -E 's/^refs\/heads\///' \
    | fzy \
    | perl -pe 's/\e\[?.*?[\@-~]//g'
  )"
else
  branch="$(
  git branch --color -a \
    | grep -v '*' \
    | sed -E 's/^ +//' \
    | fzy \
    | perl -pe 's/\e\[?.*?[\@-~]//g'
  )"
fi

if [[ -z $branch ]]; then
    exit 0
fi

is_already_branched() { git branch | grep -q "${branch##*/}" &>/dev/null; }

if [[ $branch =~ ^remotes ]]; then
    if is_already_branched; then
        # already exists
        if $is_force; then
            git checkout -q master
            git branch -D "${branch##*/}"
            git checkout -b "${branch##*/}" "${branch#*/}"
        else
            git checkout "${branch##*/}"
        fi
    else
        git checkout -b "${branch##*/}" "${branch#*/}"
    fi
else
    if is_already_branched; then
        git checkout "$branch"
    else
        git checkout -b "$branch"
    fi
fi
